{"version":3,"sources":["../src/data_processor.js"],"names":["restructuredData","rowCols","rows","data","cols","reduce","arr","c","col","text","toLowerCase","push","i","length","row","serise","k","getCategories","categories","d","category","undefined","Array","from","Set","getCategoriesData","categoriesData","sum","categoryData","filter","duration","durationint","item","value","type","name","isDurationMode","percent","hasDecimal","parseFloat","toFixed","p","getReasonsData","reasonsData","items","takeItems","reasonData","parentreason","r","reason","toDuration","utils","copyObject","toHrsAndMins","difference","daysDiff","Math","floor","hrsDiff","minsDiff","secsDiff","timeToAdd","n","moment"],"mappings":"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","file":"data_processor.js","sourcesContent":["import * as utils from './utils'\nimport moment from 'moment'\n\n/**\n * Expecting columns names, and rows values\n * Return {col-1 : value-1, col-2 : value-2 .....}\n * @param {*} rowCols \n * @param {*} rows \n */\nexport function restructuredData (rowCols, rows) {\n  let data = []\n  let cols = rowCols.reduce((arr, c) => {\n    const col = c.text.toLowerCase()\n    arr.push(col)\n    return arr\n  }, [])\n  for (let i = 0; i < rows.length; i++) {\n    const row = rows[i]\n    let serise = {}\n    for (let k = 0; k < cols.length; k++) {\n      const col = cols[k]\n      serise[col] = row[k]\n    }\n    data.push(serise)\n  }\n\n  return data\n}\n\n/**\n * Expecting the restructured datalist\n * Return an array with distinct categories  --> ['category-1', 'category-2', ...]\n * @param {*} data \n */\nexport function getCategories(data) {\n  \n  let categories = data.reduce((arr, d) => {\n    if (d.category !== null && d.category !== undefined) {\n      arr.push(d.category)\n    }\n    return arr\n  }, [])\n  \n  return Array.from(new Set(categories))\n}\n\n/**\n * Expecting categories-legends and the restructured datalist\n * For each legend, filter this legends data from the datalist, and then return an array of obj in this format\n * [{value: categoryData.length, type: 'Category', name: category}, .....]\n * \n * Note: The first item will be set to be selected = true\n * \n * @param {*} categories \n * @param {*} data \n */\nexport function getCategoriesData(categories, data) {\n  let categoriesData = []\n\n  let sum = 0\n  for (let i = 0; i < categories.length; i++) {\n    const category = categories[i];\n    const categoryData = data.filter(d => d.category === category)\n    \n    let duration = 0.00\n    for (let i = 0; i < categoryData.length; i++) {\n      const c = categoryData[i];\n      if (c.durationint) {\n        duration += c.durationint\n      }\n    }\n    \n    const item = {value: categoryData.length, type: 'Category', name: category, duration: duration, isDurationMode: false}\n    sum += item.value\n\n    categoriesData.push(item)\n  }\n  \n  for (let i = 0; i < categoriesData.length; i++) {\n    let percent = (categoriesData[i].value / sum * 100)\n    if (hasDecimal(percent)) {\n      percent = parseFloat(percent.toFixed(2))\n    }\n    categoriesData[i].p = percent\n  }\n\n  return categoriesData\n}\n\nexport function getReasonsData(category, data) {\n  let reasonsData = []\n\n  const items = takeItems(category, data)\n  \n  for (let i = 0; i < items.length; i++) {\n    const item = items[i];\n    const reasonData = data.filter(d => d.category === category && d.parentreason === item)\n\n    let duration = 0.00\n    for (let i = 0; i < reasonData.length; i++) {\n      const r = reasonData[i];\n      if (r.durationint) {\n        duration += r.durationint\n      }\n    }\n\n    const reason = {value: reasonData.length, type: 'Reason', name: item, duration: duration, isDurationMode: false}\n    reasonsData.push(reason)\n  }\n  \n  return reasonsData\n}\n\nexport function toDuration(data) {\n  let d = utils.copyObject(data)\n  for (let i = 0; i < d.length; i++) {\n    d[i].value = d[i].duration / 1000000\n    d[i].isDurationMode = true\n  }\n  return d\n}\n\n/**\n * Expecting a duration int value, return (string) hours and mins like 2:35 meaning 2 hours and 35 mins\n * if val is under 1 hour,  return (string) mins like 55-mins \n * @param {*} val \n */\nexport function toHrsAndMins(difference){  \n  const daysDiff = Math.floor(difference/1000/60/60/24)\n  difference -= daysDiff*1000*60*60*24\n\n  let hrsDiff = Math.floor(difference/1000/60/60)\n  difference -= hrsDiff*1000*60*60\n\n  const minsDiff = Math.floor(difference/1000/60)\n  difference -= minsDiff*1000*60\n\n  const secsDiff = Math.floor(difference/1000)\n  difference -= minsDiff*1000\n\n  let timeToAdd = daysDiff * 24\n  hrsDiff = hrsDiff + timeToAdd\n  \n  if (hrsDiff === 0 && minsDiff === 0) {\n    return secsDiff + ' Seconds'\n  }else if (hrsDiff === 0 && minsDiff !== 0) {\n    return minsDiff + ' Minutes'\n  }\n\n  return hrsDiff + ' Hrs & ' + minsDiff + ' Mins'\n}\n\n//look for the distinct items that this category has\nfunction takeItems(category, data){\n  return Array.from(new Set(data.reduce((arr, d) => {\n    if (d.reason !== null && d.reason !== undefined) {\n      //because the reasons in the influxdb is stored like 'root reason | sub reason'\n      //reasons.length === 1 meaning that there is no sub reasons for this item\n      //because this chart only display categories and reasons up to reason level - 1\n      if (d.category === category && d.parentreason !== null && d.parentreason !== undefined) {\n        arr.push(d.parentreason)\n      }\n    }\n    return arr\n  }, [])))\n}\n\nfunction hasDecimal(n){\n  return (n - Math.floor(n)) !== 0 ? true : false\n}"]}